========================================== source(staticAttribute, syntax=staticAttributeSyntax)
<a(){ objName::attrName }>
========================================== syntax(staticAttributeSyntax, wrapper=exprWrapper)
{
    "type": "AttributeExpression",
    "expression": {"type": "Identifier", "name": "objName"},
    "attribute": {"type": "Identifier", "name": "attrName"},
    "computed": false
}
========================================== source(staticAttributeOfThis, syntax=staticAttributeOfThisSyntax)
<a(){ ~::attrName }>
========================================== syntax(staticAttributeOfThisSyntax, wrapper=exprWrapper)
{
    "type": "AttributeExpression",
    "expression": {"type": "ThisExpression"},
    "attribute": {"type": "Identifier", "name": "attrName"},
    "computed": false
}
========================================== source(staticAttributeOfParentheses, syntax=staticAttributeOfParenthesesSyntax)
<a(){ (1)::attrName }>
========================================== syntax(staticAttributeOfParenthesesSyntax, wrapper=exprWrapper)
{
    "type": "AttributeExpression",
    "expression": {
        "type": "ParenthesisExpression",
        "expression": {"type": "Number", "value": 1}
    },
    "attribute": {"type": "Identifier", "name": "attrName"},
    "computed": false
}
========================================== source(computedAttribute, syntax=computedAttributeSyntax)
<a(){ objName::[nonAttrName] }>
========================================== syntax(computedAttributeSyntax, wrapper=exprWrapper)
{
    "type": "AttributeExpression",
    "expression": {"type": "Identifier", "name": "objName"},
    "attribute": {"type": "Identifier", "name": "nonAttrName"},
    "computed": true
}
========================================== badSource(spaceAfterDoubleColonIsForbidden)
<a(){ objName:: attrName }>
========================================== badSource(spaceBeforeDoubleColonIsForbidden)
<a(){ objName ::attrName }>
========================================== badSource(spaceBeforeAttributeAccessOpenBracketIsForbidden)
<a(){ objName ::[nonAttrName] }>
========================================== badSource(spaceBetweenColonsIsForbidden)
<a(){ objName: :[nonAttrName] }>
========================================== badSource(spaceAfterColonsIsForbidden)
<a(){ objName:: [nonAttrName] }>
========================================== badSource(leftExpressionMayNotBeNumber)
<a(){ 1::attrName }>
========================================== badSource(leftExpressionMayNotBeVariable)
<a(){ $varName::attrName }>
========================================== wrapper(exprWrapper)
{
    "type": "L20n",
    "body": [{
        "type": "Macro",
        "id": {"type": "Identifier", "name": "a"},
        "args": [],
        "expression": "<HERE>"
    }]
}
